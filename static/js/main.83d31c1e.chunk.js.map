{"version":3,"sources":["components/Home.js","components/Menu.js","components/Gmap.js","components/About.js","components/Products.js","components/actions/cartActions.js","components/actions/action-type/cart-actions.js","components/Cart.js","App.js","serviceWorker.js","components/reducers/cartReducer.js","index.js"],"names":["Home","id","className","to","href","Component","Menu","Navbar","bg","variant","expand","Brand","icon","faHome","Toggle","aria-controls","Collapse","Nav","style","width","Link","faShoppingCart","AnyReactComponent","text","Map","height","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","defaultProps","About","Container","Row","Col","md","xs","lg","Form","Label","Control","placeholder","Group","controlId","type","as","rows","Button","Products","handleChange","event","setState","search","target","value","handleChangeSelected","typeM","handleAddProduct","addToCart","state","items","products","filter","product","name","toLowerCase","indexOf","model","map","item","key","CardGroup","Card","Img","src","process","image","Body","Title","Text","description","ListGroup","ListGroupItem","price","size","Footer","onClick","faPlusSquare","momentsList","forEach","push","noFound","sortedList","Set","sort","index","length","onChange","bind","defaultValue","connect","dispatch","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","addedProducts","alt","quantity","faMinusSquare","faTrashAlt","total","toFixed","App","exact","path","component","Boolean","window","location","hostname","match","initState","cartReducer","action","addedItem","find","existed_item","newTotal","itemToRemove","new_items","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83d31c1e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section id=\"hero\">\r\n                    <div className=\"hero-container\">\r\n                        <h1>Mad About Plants</h1>\r\n                        <h2>Wholesale nursery</h2>\r\n                        <LinkContainer to=\"/products\">\r\n                            <a href=\"/products\" className=\"btn-get-started\">Get Started</a>\r\n                        </LinkContainer>\r\n                    </div>\r\n                </section> \r\n            </div>\r\n\r\n            )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { LinkContainer, IndexLinkContainer } from \"react-router-bootstrap\";\r\nimport { faHome, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default class Menu extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                    <IndexLinkContainer to=\"/portoplants\">\r\n                        <Navbar.Brand ><FontAwesomeIcon icon={faHome} /></Navbar.Brand>\r\n                    </IndexLinkContainer>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"justify-content-end\" style={{ width: \"100%\" }} >\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link><FontAwesomeIcon icon={faShoppingCart}/></Nav.Link>\r\n                            </LinkContainer>\r\n                                <LinkContainer to=\"/products\">\r\n                                    <Nav.Link>Products</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/about\">\r\n                                    <Nav.Link>About</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n\r\n         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nexport default class Map extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n            lat: 59.95,\r\n            lng: 30.33\r\n        },\r\n        zoom: 11\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: '40vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    defaultCenter={this.props.center}\r\n                    defaultZoom={this.props.zoom}>\r\n                    <AnyReactComponent\r\n                        lat={59.955413}\r\n                        lng={30.337844}\r\n                        text={\"Where's Waldo?\"}\r\n                  />\r\n        </GoogleMapReact>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Row, Col, Container, Button } from 'react-bootstrap';\r\nimport Gmap from './Gmap'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col md=\"auto\">\r\n                            <blockquote>\r\n                                <strong>Mad About Plants</strong>\r\n                            </blockquote>\r\n                            <p>\r\n                                P.O.Box 468 <br />\r\n                                EDMONTON QLD 4869<br />\r\n                                Ph 0740452777<br />\r\n                                Fax 0740555469 <br />\r\n\r\n                            </p>      \r\n                        </Col>\r\n                        <Col xs lg=\"4\">\r\n                            <Gmap />\r\n                        </Col>\r\n                    </Row>   \r\n\r\n                    <Row className=\"justify-content-md-center\" >\r\n                        <Col xs lg=\"6\">\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control placeholder=\"First name\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label>Last Name</Form.Label>\r\n                                        <Form.Control placeholder=\"Last name\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                    <Form.Label>Email address</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Enquiry</Form.Label>\r\n                                    <Form.Control as=\"textarea\" placeholder=\"Message\" rows=\"3\" />\r\n                                </Form.Group>\r\n                            </Form>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                   \r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Pagination, Row, Col, Container, Card, ListGroup, ListGroupItem, Button, CardGroup } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from './actions/cartActions'\r\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//let active = 2;\r\n//let items = [];\r\n//for (let number = 1; number <= 5; number++) {\r\n//    items.push(\r\n//        <Pagination.Item key={number} active={number === active}>\r\n//            {number}\r\n//        </Pagination.Item>,\r\n//    );\r\n//}\r\n\r\n\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            typeM:''\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n        this.setState({ search: event.target.value});\r\n\r\n    }\r\n\r\n    handleChangeSelected = event => {\r\n\r\n        this.setState({ typeM: event.target.value });\r\n\r\n    }\r\n\r\n    handleAddProduct = (id) => {\r\n        this.props.addToCart(id);\r\n    }\r\n\r\n    render() {\r\n\r\n        // Sort by price\r\n        // Adadptive Pagination\r\n\r\n        let filteredProducts = this.props.products.filter(\r\n            (product) => {\r\n                return product.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\r\n                    && product.model.toLowerCase().indexOf(this.state.typeM.toLowerCase()) !== -1;\r\n            }\r\n        )\r\n\r\n        const items = filteredProducts.map((item, key) =>\r\n\r\n            <Col lg=\"3\" className=\"grid-products\">\r\n                <CardGroup>\r\n                <Card style={{ width: '16rem' }} key={item.id}>\r\n                    <Card.Img variant=\"top\" height=\"190.5px\" src={process.env.PUBLIC_URL +`/img/plants/${item.image}`} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {item.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem><strong>Price:</strong> ${item.price}</ListGroupItem>\r\n                        <ListGroupItem><strong> Model:</strong> {item.model}</ListGroupItem>\r\n                        <ListGroupItem><strong> Size:</strong> {item.size}</ListGroupItem>\r\n                    </ListGroup>\r\n                    <Card.Footer>\r\n                        <Button onClick={() => { this.handleAddProduct(item.id) }} className=\"addBtn\" variant=\"primary\">\r\n                            <FontAwesomeIcon icon={faPlusSquare} /> Add </Button>\r\n                    </Card.Footer>\r\n                    </Card>\r\n                    </CardGroup>\r\n            </Col>\r\n\r\n        )\r\n\r\n\r\n        let momentsList = [];\r\n        this.props.products.forEach(({ id, model }) => momentsList.push({ id, model }));\r\n\r\n        let uniqueSet = [...new Set(momentsList.map(product => product.model))];\r\n\r\n        let sortedList = uniqueSet.sort()\r\n            .map((model, index) => <option key={index} >{model}</option>);\r\n\r\n        let noFound;\r\n        if (items.length <= 0) {\r\n                noFound = <Col>\r\n                    <h3>No result found</h3>\r\n                </Col>\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={4}>\r\n                            <div className=\"input-group mb-3\">\r\n\r\n                                <input className=\"form-control\" type=\"text\" name=\"search\" placeholder=\"Search\"\r\n                                    value={this.state.search}\r\n                                    onChange={this.handleChange.bind(this)} />\r\n                            </div>\r\n\r\n                        </Col>\r\n                        <Col lg={3}>\r\n                        <select className=\"custom-select\" onChange={this.handleChangeSelected.bind(this)}>\r\n                            <option defaultValue value=''>Choose model...</option>\r\n                            {sortedList}\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        {items}\r\n                        {noFound}\r\n                    </Row>\r\n                    {/* \r\n                <Row className=\"justify-content-md-center\">\r\n                        <Col md=\"auto\">\r\n\r\n                        <Pagination size=\"sm\">\r\n                            <Pagination.Prev />\r\n                            <Pagination.Item>{1}</Pagination.Item>\r\n                            <Pagination.Ellipsis />\r\n\r\n                            <Pagination.Item>{11}</Pagination.Item>\r\n                            <Pagination.Item active>{12}</Pagination.Item>\r\n                            <Pagination.Item>{13}</Pagination.Item>\r\n\r\n                            <Pagination.Ellipsis />\r\n                            <Pagination.Item>{20}</Pagination.Item>\r\n                            <Pagination.Next />\r\n                        </Pagination>\r\n                        </Col>\t\r\n                        \r\n                </Row>\r\n                */}\r\n\t\t\t\t\t</Container>\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (id) => { dispatch(addToCart(id)) }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products)\r\n","import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING } from './action-type/cart-actions'\r\n\r\nexport const addToCart = (id) => {\r\n    return {\r\n        type: ADD_TO_CART, id\r\n    }\r\n}\r\n\r\nexport const removeItem = (id) => {\r\n    return {\r\n        type: REMOVE_ITEM, id\r\n    }\r\n}\r\n\r\nexport const subtractQuantity = (id) => {\r\n    return {\r\n        type: SUB_QUANTITY, id\r\n    }\r\n}\r\n\r\nexport const addQuantity = (id) => {\r\n    return {\r\n        type: ADD_QUANTITY, id\r\n    }\r\n}\r\n\r\nexport const addShipping = (id) => {\r\n    return {\r\n        type: ADD_SHIPPING, id\r\n    }\r\n}","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, Container, Button } from 'react-bootstrap'\r\nimport { removeItem, addQuantity, subtractQuantity } from './actions/cartActions'\r\nimport { faPlusSquare, faMinusSquare, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Cart extends Component {\r\n\r\n    //Remove everything\r\n    handleRemove = (id) => {\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id) => {\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id) => {\r\n        this.props.subtractQuantity(id);\r\n    }\r\n   \r\n    render() {\r\n\r\n        let addedProducts = this.props.products.length ?\r\n            (\r\n                this.props.products.map(item => {\r\n\r\n\r\n\r\n                    return (\r\n\r\n                        \r\n\r\n                        <div >\r\n                            <Row>\r\n                                <Col xs={12} md={3} className=\"text-center\">\r\n                                    <img height=\"60px\" src={process.env.PUBLIC_URL + `/img/plants/${item.image}`} alt={item.image}  />\r\n                                </Col>  \r\n                                <Col xs={12} md={3} className=\"text-center\">\r\n                                    <div>\r\n                                        <p>Product</p> \r\n                                        <h5> {item.name}</h5>\r\n                                        \r\n                                    </div>\r\n                                </Col>\r\n                                <Col xs={12} md={2} className=\"text-center\">\r\n                                    <p>Quantity </p>\r\n                                    {item.quantity}   \r\n                                    </Col>\r\n                                <Col xs={12} md={2} className=\"text-center\">\r\n                                    <div>\r\n                                        <p>Price</p>\r\n                                        ${item.price}\r\n                                    </div>\r\n                                </Col>\r\n                                <Col xs={12} md={2} className=\"text-center align-self-center\">\r\n                                        <FontAwesomeIcon icon={faPlusSquare} onClick={() => { this.handleAddQuantity(item.id) }}/>\r\n                                        <FontAwesomeIcon icon={faMinusSquare} onClick={() => { this.handleSubtractQuantity(item.id) }}/>\r\n                                        <FontAwesomeIcon icon={faTrashAlt} onClick={() => { this.handleRemove(item.id) }}/>\r\n                                </Col>  \r\n                            </Row>                       \r\n                                </div>\r\n                            \r\n                    )\r\n               \r\n\r\n                })\r\n\r\n            )\r\n\r\n            :\r\n\r\n            (\r\n\r\n                    <p> Nothing </p>\r\n\r\n                )\r\n\r\n        \r\n                return (\r\n            <div>\r\n                        <Container>\r\n                    <div className=\"cart\">\r\n                        <h5>You have ordered:</h5>\r\n                        <div>\r\n                                   \r\n                        </div>\r\n\r\n\r\n                        <ul className=\"collection\" id={\"mapage\"}>\r\n\r\n                                    {addedProducts}\r\n                        </ul>\r\n                    </div>\r\n                    <Row className=\"justify-content-end\">\r\n                        <Col className=\"text-right\">\r\n                                    <h5>Total: ${this.props.total.toFixed(2)}</h5>\r\n                        </Col>\r\n                        </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.addedProducts,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeItem: (id) => { dispatch(removeItem(id)) },\r\n        addQuantity: (id) => { dispatch(addQuantity(id)) },\r\n        subtractQuantity: (id) => { dispatch(subtractQuantity(id)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Menu from './components/Menu';\r\nimport About from './components/About';\r\nimport Products from './components/Products';\r\nimport Cart from './components/Cart';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass App extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Menu />\r\n                    <div>\r\n                        <Switch>\r\n                            <Route exact path=\"/portoplants\" component={Home} />\r\n                            <Route path=\"/products\" component={Products} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/cart\" component={Cart} />\r\n                            <Redirect to=\"/portoplants\" />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY } from '../actions/action-type/cart-actions'\r\n\r\nconst initState = {\r\n    products: [\r\n        {\r\n            id: 1,\r\n            name: 'Acalypha',\r\n            price: 29.9,\r\n            model: 'Shrub',\r\n            size: '140mm',\r\n            description: 'A large leaf bushy shrub  to 1.5m with green & white marked leaves. Very hardy',\r\n            image: 'alcalypha.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Allamanda',\r\n            price: 14.9,\r\n            model: 'Shrub',\r\n            size: '220mm',\r\n            description: 'Compact habit, small glossy green leaves, brilliant yellow trumpet flowers',\r\n            image: 'allamanda_sunee.jpg',\r\n\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Dietes',\r\n            price: 14.9,\r\n            model: 'Groundcoverts',\r\n            size: 'none',\r\n            description: 'Clumping plant , iris like yellow flowers with brown spots',\r\n            image: 'dietes.jpg',\r\n\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Cuphea',\r\n            price: 8.9,\r\n            model: 'Groundcoverts',\r\n            size: 'none',\r\n            description: 'Compact small shrub ideal as a border plant, bears masses of small mauve flowers',\r\n            image: 'cuphea.jpg',\r\n\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Alexander palm',\r\n            price: 99.9,\r\n            model: 'Palm',\r\n            size: '600mm',\r\n            description: 'Tall solitary trunk palm, grey ringed trunk, long arching fronds ',\r\n            image: 'alexanderpalm.jpg',\r\n\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Silver lady',\r\n            price: 25.9,\r\n            model: 'Fern',\r\n            size: '160mm',\r\n            description: 'Rosette forming fern, best grown in semi shade, bright green new growth',\r\n            image: 'sylverlady.jpg',\r\n\r\n        },\r\n    ],\r\n\r\n    addedProducts: [],\r\n    total: 0\r\n\r\n}\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n\r\n    if (action.type === ADD_TO_CART) {\r\n        let addedItem = state.products.find(product => product.id === action.id)\r\n\r\n        let existed_item = state.addedProducts.find(product => action.id === product.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += 1\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.price\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price\r\n\r\n            return {\r\n                ...state,\r\n                addedProducts: [...state.addedProducts, addedItem],\r\n                total: newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n    //Remove item\r\n    if (action.type === REMOVE_ITEM) {\r\n        let itemToRemove = state.addedProducts.find(product => action.id === product.id)\r\n        let new_items = state.addedProducts.filter(product => action.id !== product.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity)\r\n        return {\r\n            ...state,\r\n            addedProducts: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    //For one item\r\n    if (action.type === ADD_QUANTITY) {\r\n        let addedItem = state.products.find(product => product.id === action.id)\r\n        addedItem.quantity += 1\r\n        let newTotal = state.total + addedItem.price\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === SUB_QUANTITY) {\r\n        let addedItem = state.products.find(product => product.id === action.id)\r\n\r\n        //If quantity reach 0 then remove item\r\n        if (addedItem.quantity === 1) {\r\n            let new_items = state.addedProducts.filter(product => product.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                addedProducts: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    else {\r\n        return state\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default cartReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport cartReducer from './components/reducers/cartReducer';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(<Provider store={store}> <App /> </Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}